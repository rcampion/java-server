STATEMENT_CONNECTION_VALIDATION_QUERY = \
    select 1
STATEMENT_CREATE_AUTHORITIES_TABLE = \
    CREATE TABLE app_authorities ( \
      username VARCHAR(100) NOT NULL, \
      authority VARCHAR(30) NOT NULL, \
      CONSTRAINT app_u_auth UNIQUE (username, authority), \
      CONSTRAINT app_f_auth_username FOREIGN KEY (username) REFERENCES app_users(username), \
      CONSTRAINT app_f_auth_authority FOREIGN KEY (authority) REFERENCES app_role(role_name) \
    )
STATEMENT_CREATE_CATEGORY_TABLE = \
    CREATE TABLE app_category ( \
      child_topic_id INTEGER NOT NULL, \
      category_name VARCHAR(200) NOT NULL, \
      sort_key VARCHAR(200), \
      CONSTRAINT app_p_category PRIMARY KEY (child_topic_id, category_name), \
      CONSTRAINT app_f_cat_child_id FOREIGN KEY (child_topic_id) REFERENCES app_topic(topic_id) \
    )
STATEMENT_CREATE_CATEGORY_INDEX = \
    CREATE INDEX app_i_category_cti on app_category (child_topic_id)
     
STATEMENT_CREATE_CONFIGURATION_TABLE = \
    CREATE TABLE app_configuration ( \
      config_key VARCHAR(50) NOT NULL, \
      config_value VARCHAR(500) NOT NULL, \
      CONSTRAINT app_p_config PRIMARY KEY (config_key) \
    )
STATEMENT_CREATE_GROUP_AUTHORITIES_TABLE = \
    CREATE TABLE app_group_authorities ( \
      group_id INTEGER NOT NULL, \
      authority VARCHAR(30) NOT NULL, \
      CONSTRAINT app_u_gauth UNIQUE (group_id, authority), \
      CONSTRAINT app_f_gauth_group FOREIGN KEY (group_id) REFERENCES app_group(group_id), \
      CONSTRAINT app_f_gauth_authority FOREIGN KEY (authority) REFERENCES app_role(role_name) \
    )
STATEMENT_CREATE_GROUP_MEMBERS_TABLE = \
    CREATE TABLE app_group_members ( \
      id INTEGER NOT NULL, \
      username VARCHAR(100) NOT NULL, \
      group_id INTEGER NOT NULL, \
      CONSTRAINT app_p_gmemb PRIMARY KEY (id), \
      CONSTRAINT app_f_gmemb_username FOREIGN KEY (username) REFERENCES app_users(username), \
      CONSTRAINT app_f_gmemb_group FOREIGN KEY (group_id) REFERENCES app_group(group_id) \
    )
STATEMENT_CREATE_GROUP_TABLE = \
    CREATE TABLE app_group ( \
      group_id INTEGER NOT NULL, \
      group_name VARCHAR(30) NOT NULL, \
      group_description VARCHAR(200), \
      CONSTRAINT app_p_group PRIMARY KEY (group_id), \
      CONSTRAINT app_u_group_name UNIQUE (group_name) \
    )
STATEMENT_CREATE_INTERWIKI_TABLE = \
    CREATE TABLE app_interwiki ( \
      interwiki_prefix VARCHAR(30) NOT NULL, \
      interwiki_pattern VARCHAR(200) NOT NULL, \
      interwiki_display VARCHAR(30) NOT NULL, \
      interwiki_type INTEGER NOT NULL, \
      CONSTRAINT app_p_interw PRIMARY KEY (interwiki_prefix) \
    )
STATEMENT_CREATE_LOG_TABLE = \
    CREATE TABLE app_log ( \
      log_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      wiki_user_id INTEGER, \
      display_name VARCHAR(200) NOT NULL, \
      topic_id INTEGER, \
      topic_version_id INTEGER, \
      log_type INTEGER NOT NULL, \
      log_sub_type INTEGER, \
      log_comment VARCHAR(200), \
      log_params VARCHAR(500), \
      CONSTRAINT app_f_log_wuser FOREIGN KEY (wiki_user_id) REFERENCES app_wiki_user(wiki_user_id), \
      CONSTRAINT app_f_log_topic_ver FOREIGN KEY (topic_version_id) REFERENCES app_topic_version(topic_version_id), \
      CONSTRAINT app_f_log_topic FOREIGN KEY (topic_id) REFERENCES app_topic(topic_id), \
      CONSTRAINT app_f_log_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES app_virtual_wiki(virtual_wiki_id) \
    )
STATEMENT_CREATE_NAMESPACE_TABLE = \
    CREATE TABLE app_namespace ( \
      namespace_id INTEGER NOT NULL, \
      namespace VARCHAR(200) NOT NULL, \
      main_namespace_id INTEGER, \
      CONSTRAINT app_p_namesp PRIMARY KEY (namespace_id), \
      CONSTRAINT app_u_namesp_namesp UNIQUE (namespace), \
      CONSTRAINT app_f_namesp_namesp FOREIGN KEY (main_namespace_id) REFERENCES app_namespace(namespace_id) \
    )
STATEMENT_CREATE_NAMESPACE_TRANSLATION_TABLE = \
    CREATE TABLE app_namespace_translation ( \
      namespace_id INTEGER NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      namespace VARCHAR(200) NOT NULL, \
      CONSTRAINT app_p_namesptr PRIMARY KEY (namespace_id, virtual_wiki_id), \
      CONSTRAINT app_f_namesptr_namesp FOREIGN KEY (namespace_id) REFERENCES app_namespace(namespace_id), \
      CONSTRAINT app_f_namesptr_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES app_virtual_wiki(virtual_wiki_id), \
      CONSTRAINT app_u_namesptr_namesp UNIQUE (virtual_wiki_id, namespace) \
    )
STATEMENT_CREATE_RECENT_CHANGE_TABLE = \
    CREATE TABLE app_recent_change ( \
      topic_version_id INTEGER, \
      previous_topic_version_id INTEGER, \
      topic_id INTEGER, \
      topic_name VARCHAR(200), \
      change_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      change_comment VARCHAR(200), \
      wiki_user_id INTEGER, \
      display_name VARCHAR(200) NOT NULL, \
      edit_type INTEGER, \
      log_type INTEGER, \
      log_sub_type INTEGER, \
      log_params VARCHAR(500), \
      virtual_wiki_id INTEGER NOT NULL, \
      virtual_wiki_name VARCHAR(100) NOT NULL, \
      characters_changed INTEGER, \
      CONSTRAINT app_f_rc_topic_ver FOREIGN KEY (topic_version_id) REFERENCES app_topic_version(topic_version_id), \
      CONSTRAINT app_f_rc_p_topic_v FOREIGN KEY (previous_topic_version_id) REFERENCES app_topic_version(topic_version_id), \
      CONSTRAINT app_f_rc_topic FOREIGN KEY (topic_id) REFERENCES app_topic(topic_id), \
      CONSTRAINT app_f_rc_wuser FOREIGN KEY (wiki_user_id) REFERENCES app_wiki_user(wiki_user_id), \
      CONSTRAINT app_f_rc_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES app_virtual_wiki(virtual_wiki_id) \
    )
STATEMENT_CREATE_ROLE_TABLE = \
    CREATE TABLE app_role ( \
      role_name VARCHAR(30) NOT NULL, \
      role_description VARCHAR(200), \
      CONSTRAINT app_p_role PRIMARY KEY (role_name) \
    )
STATEMENT_CREATE_TOPIC_CURRENT_VERSION_CONSTRAINT = \
    ALTER TABLE app_topic add constraint app_f_topic_topicv \
    FOREIGN KEY (current_version_id) \
    REFERENCES app_topic_version(topic_version_id) 
STATEMENT_CREATE_TOPIC_TABLE = \
    CREATE TABLE app_topic ( \
      topic_id INTEGER NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      namespace_id INTEGER DEFAULT 0 NOT NULL, \
      topic_name VARCHAR(200) NOT NULL, \
      page_name VARCHAR(200) NOT NULL, \
      page_name_lower VARCHAR(200) NOT NULL, \
      delete_date TIMESTAMP, \
      topic_read_only INTEGER DEFAULT 0 NOT NULL, \
      topic_admin_only INTEGER DEFAULT 0 NOT NULL, \
      current_version_id INTEGER, \
      topic_type INTEGER NOT NULL, \
      redirect_to VARCHAR(200), \
      CONSTRAINT app_p_topic PRIMARY KEY (topic_id), \
      CONSTRAINT app_f_topic_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES app_virtual_wiki(virtual_wiki_id), \
      CONSTRAINT app_f_topic_namesp FOREIGN KEY (namespace_id) REFERENCES app_namespace(namespace_id), \
      CONSTRAINT app_u_topic_name UNIQUE (topic_name, virtual_wiki_id, delete_date) \
    )
STATEMENT_CREATE_TOPIC_LINKS_TABLE = \
    CREATE TABLE app_topic_links ( \
      topic_id INTEGER NOT NULL, \
      link_topic_namespace_id INTEGER DEFAULT 0 NOT NULL, \
      link_topic_page_name VARCHAR(200) NOT NULL, \
      CONSTRAINT app_p_topic_links PRIMARY KEY (topic_id, link_topic_namespace_id, link_topic_page_name), \
      CONSTRAINT app_f_tlink_namesp FOREIGN KEY (link_topic_namespace_id) REFERENCES app_namespace(namespace_id) \
    )
STATEMENT_CREATE_TOPIC_LINKS_INDEX = \
    CREATE INDEX app_i_topic_links_tnm on app_topic_links (link_topic_page_name) 
STATEMENT_CREATE_TOPIC_PAGE_NAME_INDEX = \
    CREATE INDEX app_i_topic_pgnm on app_topic (page_name) 
STATEMENT_CREATE_TOPIC_PAGE_NAME_LOWER_INDEX = \
    CREATE INDEX app_i_topic_pgnml on app_topic (page_name_lower) 
STATEMENT_CREATE_TOPIC_VIRTUAL_WIKI_INDEX = \
    CREATE INDEX app_i_topic_vwiki on app_topic (virtual_wiki_id)
STATEMENT_CREATE_TOPIC_NAMESPACE_INDEX = \
    CREATE INDEX app_i_topic_nmsp on app_topic (namespace_id) 
STATEMENT_CREATE_TOPIC_CURRENT_VERSION_INDEX = \
    CREATE INDEX app_i_topic_cver on app_topic (current_version_id) 
STATEMENT_CREATE_TOPIC_VERSION_TABLE = \
    CREATE TABLE app_topic_version ( \
      topic_version_id INTEGER NOT NULL, \
      topic_id INTEGER NOT NULL, \
      edit_comment VARCHAR(200), \
      version_content TEXT, \
      wiki_user_id INTEGER, \
      wiki_user_display VARCHAR(100) NOT NULL, \
      edit_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      edit_type INTEGER NOT NULL, \
      previous_topic_version_id INTEGER, \
      characters_changed INTEGER, \
      version_params VARCHAR(500), \
      CONSTRAINT app_p_topic_ver PRIMARY KEY (topic_version_id), \
      CONSTRAINT app_f_topicv_topic FOREIGN KEY (topic_id) REFERENCES app_topic(topic_id), \
      CONSTRAINT app_f_topicv_wuser FOREIGN KEY (wiki_user_id) REFERENCES app_wiki_user(wiki_user_id), \
      CONSTRAINT app_f_topicv_pver FOREIGN KEY (previous_topic_version_id) REFERENCES app_topic_version(topic_version_id) \
    )
STATEMENT_CREATE_TOPIC_VERSION_TOPIC_INDEX = \
    CREATE INDEX app_i_topicv_topic on app_topic_version (topic_id) 
STATEMENT_CREATE_TOPIC_VERSION_PREVIOUS_INDEX = \
    CREATE INDEX app_i_topicv_prv on app_topic_version (previous_topic_version_id) 
STATEMENT_CREATE_TOPIC_VERSION_USER_DISPLAY_INDEX = \
    CREATE INDEX app_i_topicv_udisp on app_topic_version (wiki_user_display) 
STATEMENT_CREATE_TOPIC_VERSION_USER_ID_INDEX = \
    CREATE INDEX app_i_topicv_uid on app_topic_version (wiki_user_id) 
STATEMENT_CREATE_USER_BLOCK_TABLE = \
    CREATE TABLE app_user_block ( \
      user_block_id INTEGER NOT NULL, \
      wiki_user_id INTEGER, \
      ip_address VARCHAR(39), \
      block_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      block_end_date TIMESTAMP, \
      block_reason VARCHAR(200), \
      blocked_by_user_id INTEGER NOT NULL, \
      unblock_date TIMESTAMP, \
      unblock_reason VARCHAR(200), \
      unblocked_by_user_id INTEGER, \
      CONSTRAINT app_u_ublock PRIMARY KEY (user_block_id), \
      CONSTRAINT app_f_ublock_userid FOREIGN KEY (wiki_user_id) REFERENCES app_wiki_user(wiki_user_id), \
      CONSTRAINT app_f_ublock_blkid FOREIGN KEY (blocked_by_user_id) REFERENCES app_wiki_user(wiki_user_id), \
      CONSTRAINT app_f_ublock_unblkid FOREIGN KEY (unblocked_by_user_id) REFERENCES app_wiki_user(wiki_user_id) \
    )
STATEMENT_CREATE_USERS_TABLE = \
    CREATE TABLE app_users ( \
      username varchar(100) NOT NULL, \
      password varchar(100) NOT NULL, \
      enabled INTEGER DEFAULT 1 NOT NULL, \
      challenge_value varchar(100), \
      challenge_date timestamp, \
      challenge_ip varchar(39), \
      challenge_tries integer DEFAULT 0 NOT NULL, \
      CONSTRAINT app_p_users PRIMARY KEY (username) \
    )
STATEMENT_CREATE_VIRTUAL_WIKI_TABLE = \
    CREATE TABLE app_virtual_wiki ( \
      virtual_wiki_id INTEGER NOT NULL, \
      virtual_wiki_name VARCHAR(100) NOT NULL, \
      default_topic_name VARCHAR(200), \
      create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      logo_image_url VARCHAR(200), \
      site_name VARCHAR(200), \
      meta_description VARCHAR(500), \
      CONSTRAINT app_p_vwiki PRIMARY KEY (virtual_wiki_id), \
      CONSTRAINT app_u_vwiki_name UNIQUE (virtual_wiki_name) \
    )
STATEMENT_CREATE_WATCHLIST_TABLE = \
    CREATE TABLE app_watchlist ( \
      wiki_user_id INTEGER NOT NULL, \
      topic_name VARCHAR(200), \
      virtual_wiki_id INTEGER NOT NULL, \
      CONSTRAINT app_p_watchlist PRIMARY KEY (wiki_user_id, topic_name, virtual_wiki_id), \
      CONSTRAINT app_f_wlist_userid FOREIGN KEY (wiki_user_id) REFERENCES app_wiki_user(wiki_user_id), \
      CONSTRAINT app_f_wlist_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES app_virtual_wiki(virtual_wiki_id) \
    )
STATEMENT_CREATE_WIKI_FILE_TABLE = \
    CREATE TABLE app_file ( \
      file_id INTEGER NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      file_name VARCHAR(200) NOT NULL, \
      delete_date TIMESTAMP, \
      file_read_only INTEGER DEFAULT 0 NOT NULL, \
      file_admin_only INTEGER DEFAULT 0 NOT NULL, \
      file_url VARCHAR(200) NOT NULL, \
      mime_type VARCHAR(100) NOT NULL, \
      topic_id INTEGER NOT NULL, \
      file_size INTEGER NOT NULL, \
      CONSTRAINT app_p_file PRIMARY KEY (file_id), \
      CONSTRAINT app_f_file_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES app_virtual_wiki(virtual_wiki_id), \
      CONSTRAINT app_f_file_topic FOREIGN KEY (topic_id) REFERENCES app_topic(topic_id), \
      CONSTRAINT app_u_file_url UNIQUE (file_url), \
      CONSTRAINT app_u_file_topic UNIQUE (virtual_wiki_id, topic_id) \
    )
STATEMENT_CREATE_WIKI_FILE_VERSION_TABLE = \
    CREATE TABLE app_file_version ( \
      file_version_id INTEGER NOT NULL, \
      file_id INTEGER NOT NULL, \
      upload_comment VARCHAR(200), \
      file_url VARCHAR(200) NOT NULL, \
      wiki_user_id INTEGER, \
      wiki_user_display VARCHAR(100) NOT NULL, \
      upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      mime_type VARCHAR(100) NOT NULL, \
      file_size INTEGER NOT NULL, \
      CONSTRAINT app_p_file_ver PRIMARY KEY (file_version_id), \
      CONSTRAINT app_f_filev_file FOREIGN KEY (file_id) REFERENCES app_file(file_id), \
      CONSTRAINT app_f_filev_wuser FOREIGN KEY (wiki_user_id) REFERENCES app_wiki_user(wiki_user_id), \
      CONSTRAINT app_u_filev_url UNIQUE (file_url), \
      CONSTRAINT app_u_filev_f_id_fv_id UNIQUE (file_id, file_version_id) \
    )
STATEMENT_CREATE_WIKI_USER_TABLE = \
    CREATE TABLE app_wiki_user ( \
      wiki_user_id INTEGER NOT NULL, \
      login VARCHAR(100) NOT NULL, \
      display_name VARCHAR(100), \
      create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      last_login_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      create_ip_address VARCHAR(39) NOT NULL, \
      last_login_ip_address VARCHAR(39) NOT NULL, \
      email VARCHAR(100), \
      CONSTRAINT app_p_wuser PRIMARY KEY (wiki_user_id), \
      CONSTRAINT app_f_wuser_users FOREIGN KEY (login) REFERENCES app_users(username) \
    )
STATEMENT_CREATE_WIKI_USER_LOGIN_INDEX = \
    CREATE UNIQUE INDEX app_u_wuser_login on app_wiki_user (lower(login)) 
STATEMENT_CREATE_USER_PREFERENCES_DEFAULTS_TABLE = \
    CREATE TABLE app_user_preferences_defaults ( \
      pref_key VARCHAR(100), \
      pref_value VARCHAR(250), \
      pref_group_key VARCHAR(100), \
      seq_nr INTEGER, \
      CONSTRAINT app_p_uprefdef PRIMARY KEY (pref_key) \
    )
STATEMENT_CREATE_USER_PREFERENCES_TABLE = \
    CREATE TABLE app_user_preferences ( \
      wiki_user_id INTEGER, \
      pref_key VARCHAR(100), \
      pref_value VARCHAR(250), \
      CONSTRAINT app_p_upref PRIMARY KEY (wiki_user_id, pref_key), \
      CONSTRAINT app_f_upref_uwiki FOREIGN KEY (wiki_user_id) REFERENCES app_wiki_user (wiki_user_id), \
      CONSTRAINT app_f_upref_uprefdef FOREIGN KEY (pref_key) REFERENCES app_user_preferences_defaults (pref_key) \
    )
STATEMENT_CREATE_USER_PREFERENCES_WIKI_USER_INDEX = \
    CREATE INDEX app_u_upref ON app_user_preferences(wiki_user_id)
STATEMENT_CREATE_FILE_DATA_TABLE = \
    CREATE TABLE app_file_data ( \
      file_version_id INTEGER NOT NULL, \
      resized INTEGER NOT NULL, \
      image_width INTEGER NOT NULL, \
      image_height INTEGER NOT NULL, \
      file_data BLOB NOT NULL, \
      CONSTRAINT app_p_file_data PRIMARY KEY (file_version_id, resized), \
      CONSTRAINT app_f_file_data_file_version FOREIGN KEY (file_version_id) REFERENCES app_file_version(file_version_id) \
    )
STATEMENT_CREATE_SEQUENCES =
STATEMENT_DELETE_AUTHORITIES = \
    delete from app_authorities \
    where username = ?
STATEMENT_DELETE_CONFIGURATION = \
    delete from app_configuration
STATEMENT_DELETE_GROUP_MAP_GROUP = \
    delete from app_group_members \
    where groupId = ?
STATEMENT_DELETE_GROUP_MAP_USER = \
    delete from app_group_members \
    where username = ? \
    and group_id > 2
STATEMENT_DELETE_GROUP_AUTHORITIES = \
    delete from app_group_authorities \
    where group_id = ?
STATEMENT_DELETE_INTERWIKI = \
    delete from app_interwiki \
    where interwiki_prefix = ?
STATEMENT_DELETE_LOG_ITEMS = \
    DELETE from app_log \
    where virtual_wiki_id = ?
STATEMENT_DELETE_LOG_ITEMS_BY_TOPIC_VERSION = \
    DELETE from app_log \
    where topic_version_id = ?
STATEMENT_DELETE_NAMESPACE_TRANSLATIONS = \
    delete from app_namespace_translation \
    where virtual_wiki_id = ?
STATEMENT_DELETE_RECENT_CHANGES = \
    DELETE from app_recent_change
STATEMENT_DELETE_RECENT_CHANGES_TOPIC = \
    DELETE from app_recent_change \
    where topic_id = ? \
    and edit_type != 5 
STATEMENT_DELETE_RECENT_CHANGES_TOPIC_VERSION = \
    DELETE from app_recent_change \
    where topic_version_id = ? 
STATEMENT_DELETE_TOPIC_CATEGORIES = \
    delete from app_category \
    where child_topic_id = ? 
STATEMENT_DELETE_TOPIC_LINKS = \
    delete from app_topic_links \
    where topic_id = ? 
STATEMENT_DELETE_TOPIC_VERSION = \
    delete from app_topic_version \
    where topic_version_id = ? 
STATEMENT_DELETE_WATCHLIST_ENTRY = \
    delete from app_watchlist \
    where virtual_wiki_id = ? \
    and topic_name = ? \
    and wiki_user_id = ?
STATEMENT_DELETE_RESIZED_IMAGES = \
    delete from app_file_data \
    where file_version_id in (select file_version_id from app_file_version where file_id = ?) \
    and resized != 0
STATEMENT_DELETE_USER_PREFERENCES = \
    delete from app_user_preferences \
    where wiki_user_id = ?
STATEMENT_DROP_SEQUENCES =
STATEMENT_DROP_AUTHORITIES_TABLE = \
    DROP TABLE app_authorities
STATEMENT_DROP_CATEGORY_TABLE = \
    DROP TABLE app_category 
STATEMENT_DROP_CONFIGURATION_TABLE = \
    DROP TABLE app_configuration
STATEMENT_DROP_GROUP_AUTHORITIES_TABLE = \
    DROP TABLE app_group_authorities
STATEMENT_DROP_GROUP_MEMBERS_TABLE = \
    DROP TABLE app_group_members
STATEMENT_DROP_GROUP_TABLE = \
    DROP TABLE app_group 
STATEMENT_DROP_INTERWIKI_TABLE = \
    DROP TABLE app_interwiki
STATEMENT_DROP_LOG_TABLE = \
    DROP TABLE app_log
STATEMENT_DROP_NAMESPACE_TABLE = \
    DROP TABLE app_namespace
STATEMENT_DROP_NAMESPACE_TRANSLATION_TABLE = \
    DROP TABLE app_namespace_translation
STATEMENT_DROP_RECENT_CHANGE_TABLE = \
    DROP TABLE app_recent_change
STATEMENT_DROP_ROLE_TABLE = \
    DROP TABLE app_role 
STATEMENT_DROP_TOPIC_CURRENT_VERSION_CONSTRAINT = \
    ALTER TABLE app_topic drop constraint app_f_topic_topicv 
STATEMENT_DROP_TOPIC_TABLE = \
    DROP TABLE app_topic
STATEMENT_DROP_TOPIC_LINKS_TABLE = \
    DROP TABLE app_topic_links
STATEMENT_DROP_TOPIC_VERSION_TABLE = \
    DROP TABLE app_topic_version
STATEMENT_DROP_USER_BLOCK_TABLE = \
    DROP TABLE app_user_block
STATEMENT_DROP_USERS_TABLE = \
    DROP TABLE app_users
STATEMENT_DROP_VIRTUAL_WIKI_TABLE = \
    DROP TABLE app_virtual_wiki
STATEMENT_DROP_WATCHLIST_TABLE = \
    DROP TABLE app_watchlist
STATEMENT_DROP_WIKI_FILE_TABLE = \
    DROP TABLE app_file
STATEMENT_DROP_WIKI_FILE_VERSION_TABLE = \
    DROP TABLE app_file_version
STATEMENT_DROP_WIKI_USER_TABLE = \
    DROP TABLE app_wiki_user
STATEMENT_DROP_FILE_DATA_TABLE = \
    DROP TABLE app_file_data
STATEMENT_INSERT_AUTHORITY = \
    insert into app_authorities ( \
      username, authority \
    ) values ( \
      ?, ? \
    )
STATEMENT_INSERT_CATEGORY = \
    insert into app_category ( \
      child_topic_id, category_name, sort_key \
    ) values ( \
      ?, ?, ? \
    )
STATEMENT_INSERT_CONFIGURATION = \
    insert into app_configuration ( \
      config_key, config_value \
    ) values ( \
      ?, ? \
    )
STATEMENT_INSERT_GROUP = \
    insert into app_group ( \
      group_id, group_name, group_description \
    ) values ( \
      ?, ?, ? \
    )
STATEMENT_INSERT_GROUP_AUTO_INCREMENT = \
    insert into app_group ( \
      group_name, group_description \
    ) values ( \
      ?, ? \
    )
STATEMENT_INSERT_GROUP_AUTHORITY = \
    insert into app_group_authorities ( \
      group_id, authority \
    ) values ( \
      ?, ? \
    )
STATEMENT_INSERT_GROUP_MEMBER = \
    insert into app_group_members ( \
      id, username, group_id \
    ) values ( \
      ?, ?, ? \
    )
STATEMENT_INSERT_GROUP_MEMBER_AUTO_INCREMENT = \
    insert into app_group_members ( \
      username, group_id \
    ) values ( \
      ?, ? \
    )
STATEMENT_INSERT_INTERWIKI = \
    insert into app_interwiki ( \
      interwiki_prefix, interwiki_pattern, interwiki_display, interwiki_type \
    ) values ( \
      ?, ?, ?, ? \
    )
STATEMENT_INSERT_LOG_ITEM = \
    insert into app_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_sub_type, log_comment, \
      log_params, topic_id, topic_version_id \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_LOG_ITEMS_BLOCK = \
    INSERT INTO app_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_comment, log_params, \
      log_sub_type, topic_id, topic_version_id \
    ) \
    SELECT \
      block_date, ?, blocked_by_user_id, \
      app_wiki_user_2.login, ?, block_reason, \
      coalesce(app_wiki_user.login, app_user_block.ip_address) || '|' || block_end_date, \
      ?, null, null \
    FROM app_wiki_user app_wiki_user_2, app_user_block \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_user_block.wiki_user_id \
    ) \
    WHERE app_user_block.blocked_by_user_id = app_wiki_user_2.wiki_user_id \
    AND app_user_block.unblocked_by_user_id is null
STATEMENT_INSERT_LOG_ITEMS_BY_TOPIC_VERSION_TYPE = \
    INSERT INTO app_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_comment, log_params, \
      topic_id, topic_version_id \
    ) \
    SELECT \
      app_topic_version.edit_date, app_topic.virtual_wiki_id, \
      app_topic_version.wiki_user_id, \
      coalesce(app_wiki_user.login, app_topic_version.wiki_user_display), \
      ?, app_topic_version.edit_comment, app_topic.topic_name || ?, \
      app_topic.topic_id, app_topic_version.topic_version_id \
    FROM app_topic, app_topic_version \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_topic_version.wiki_user_id \
    ) \
    WHERE app_topic.topic_id = app_topic_version.topic_id \
    AND app_topic.virtual_wiki_id = ? \
    AND app_topic_version.edit_type = ?
STATEMENT_INSERT_LOG_ITEMS_IMPORT = \
    INSERT INTO app_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_comment, log_params, \
      topic_id, topic_version_id \
    ) \
    SELECT \
      app_topic_version.edit_date, app_topic.virtual_wiki_id, \
      app_topic_version.wiki_user_id, \
      coalesce(app_wiki_user.login, app_topic_version.wiki_user_display), \
      ?, app_topic_version.edit_comment, app_topic.topic_name, \
      app_topic.topic_id, app_topic_version.topic_version_id \
    FROM app_topic, app_topic_version \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_topic_version.wiki_user_id \
    ) \
    WHERE app_topic.topic_id = app_topic_version.topic_id \
    AND app_topic_version.edit_type = ? \
    AND app_topic.virtual_wiki_id = ? \
    AND app_topic_version.topic_version_id in ( \
      select max(topic_version_id) from app_topic_version \
      where edit_type = ? \
      group by topic_id \
    )
STATEMENT_INSERT_LOG_ITEMS_MOVE = \
    INSERT INTO app_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_comment, log_params, \
      topic_id, topic_version_id \
    ) \
    SELECT \
      app_topic_version.edit_date, app_topic.virtual_wiki_id, \
      app_topic_version.wiki_user_id, \
      coalesce(app_wiki_user.login, app_topic_version.wiki_user_display), \
      ?, app_topic_version.edit_comment, app_topic.topic_name || '|' || app_topic.redirect_to, \
      app_topic.topic_id, app_topic_version.topic_version_id \
    FROM app_topic, app_topic_version \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_topic_version.wiki_user_id \
    ) \
    WHERE app_topic.topic_id = app_topic_version.topic_id \
    AND app_topic.virtual_wiki_id = ? \
    AND app_topic.redirect_to is not null \
    AND app_topic_version.edit_type = ?
STATEMENT_INSERT_LOG_ITEMS_UNBLOCK = \
    INSERT INTO app_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_comment, log_params, \
      log_sub_type, topic_id, topic_version_id \
    ) \
    SELECT \
      unblock_date, ?, unblocked_by_user_id, \
      app_wiki_user_2.login, ?, unblock_reason, \
      coalesce(app_wiki_user.login, app_user_block.ip_address), \
      ?, null, null \
    FROM app_wiki_user app_wiki_user_2, app_user_block \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_user_block.wiki_user_id \
    ) \
    WHERE app_user_block.unblocked_by_user_id = app_wiki_user_2.wiki_user_id \
    AND app_user_block.unblocked_by_user_id is not null
STATEMENT_INSERT_LOG_ITEMS_UPLOAD = \
    INSERT INTO app_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_comment, log_params, \
      topic_id, topic_version_id \
    ) \
    SELECT \
      app_topic_version.edit_date, app_topic.virtual_wiki_id, \
      app_topic_version.wiki_user_id, \
      coalesce(app_wiki_user.login, app_topic_version.wiki_user_display), \
      ?, app_topic_version.edit_comment, app_topic.topic_name, \
      app_topic.topic_id, app_topic_version.topic_version_id \
    FROM app_topic, app_topic_version \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_topic_version.wiki_user_id \
    ) \
    WHERE app_topic.topic_id = app_topic_version.topic_id \
    AND app_topic.virtual_wiki_id = ? \
    AND app_topic_version.edit_type = ? \
    AND app_topic.topic_type in (4, 6)
STATEMENT_INSERT_LOG_ITEMS_USER = \
    INSERT INTO app_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_comment, log_params, \
      topic_id, topic_version_id \
    ) \
    SELECT \
      create_date, ?, wiki_user_id, \
      login, ?, null, null, null, null \
    FROM app_wiki_user
STATEMENT_INSERT_NAMESPACE = \
    insert into app_namespace ( \
      namespace, main_namespace_id, namespace_id \
    ) values ( \
      ?, ?, ? \
    )
STATEMENT_INSERT_NAMESPACE_TRANSLATION = \
    insert into app_namespace_translation ( \
      namespace_id, virtual_wiki_id, namespace \
    ) values ( \
      ?, ?, ? \
    )
STATEMENT_INSERT_RECENT_CHANGE = \
    insert into app_recent_change ( \
      topic_version_id, previous_topic_version_id, topic_id, \
      topic_name, change_date, change_comment, wiki_user_id, \
      display_name, edit_type, virtual_wiki_id, virtual_wiki_name, \
      characters_changed, log_type, log_sub_type, log_params \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_RECENT_CHANGES_VERSIONS = \
    INSERT INTO app_recent_change ( \
      topic_version_id, topic_id, \
      topic_name, change_date, wiki_user_id, display_name, \
      edit_type, virtual_wiki_id, virtual_wiki_name, change_comment, \
      previous_topic_version_id, characters_changed, log_type, log_params \
    ) \
    SELECT \
      app_topic_version.topic_version_id, app_topic.topic_id, \
      app_topic.topic_name, app_topic_version.edit_date, \
      app_topic_version.wiki_user_id, \
      coalesce(app_wiki_user.login, app_topic_version.wiki_user_display), \
      app_topic_version.edit_type, app_virtual_wiki.virtual_wiki_id, \
      app_virtual_wiki.virtual_wiki_name, app_topic_version.edit_comment, \
      app_topic_version.previous_topic_version_id, \
      app_topic_version.characters_changed, null, app_topic_version.version_params \
    FROM app_topic, app_virtual_wiki, app_topic_version \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_topic_version.wiki_user_id \
    ) \
    WHERE app_topic.topic_id = app_topic_version.topic_id \
    AND app_topic.virtual_wiki_id = app_virtual_wiki.virtual_wiki_id \
    AND app_topic.delete_date is null \
    AND ( \
      app_topic_version.edit_type in (1, 2, 3) \
      OR (app_topic_version.edit_type = 8 AND app_topic.current_version_id != app_topic_version.topic_version_id) \
    ) \
    order by app_topic_version.edit_date desc \
    limit ?
STATEMENT_INSERT_RECENT_CHANGES_LOGS = \
    INSERT INTO app_recent_change ( \
      topic_version_id, topic_id, \
      topic_name, change_date, wiki_user_id, display_name, \
      edit_type, virtual_wiki_id, virtual_wiki_name, change_comment, \
      previous_topic_version_id, characters_changed, log_type, \
      log_sub_type, log_params \
    ) \
    SELECT \
      app_log.topic_version_id, app_log.topic_id, null, app_log.log_date, \
      app_log.wiki_user_id, coalesce(app_wiki_user.login, app_log.display_name), \
      null, app_virtual_wiki.virtual_wiki_id, \
      app_virtual_wiki.virtual_wiki_name, app_log.log_comment, \
      null, null, app_log.log_type, app_log.log_sub_type, app_log.log_params \
    FROM app_virtual_wiki, app_log \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_log.wiki_user_id \
    ) \
    WHERE app_log.virtual_wiki_id = app_virtual_wiki.virtual_wiki_id
STATEMENT_INSERT_ROLE = \
    insert into app_role ( \
      role_name, role_description \
    ) values ( \
      ?, ? \
    )
STATEMENT_INSERT_TOPIC = \
    insert into app_topic ( \
      topic_id, virtual_wiki_id, topic_name, topic_type, \
      topic_read_only, current_version_id, delete_date, \
      topic_admin_only, redirect_to, namespace_id, \
      page_name, page_name_lower \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_TOPIC_AUTO_INCREMENT = \
    insert into app_topic ( \
      virtual_wiki_id, topic_name, topic_type, \
      topic_read_only, current_version_id, delete_date, \
      topic_admin_only, redirect_to, namespace_id, \
      page_name, page_name_lower \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_TOPIC_LINKS = \
    insert into app_topic_links ( \
      topic_id, link_topic_namespace_id, link_topic_page_name \
    ) values ( \
      ?, ?, ? \
    )
STATEMENT_INSERT_TOPIC_VERSION = \
    insert into app_topic_version ( \
      topic_version_id, topic_id, edit_comment, version_content, \
      wiki_user_id, edit_type, wiki_user_display, edit_date, \
      previous_topic_version_id, characters_changed, version_params \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_TOPIC_VERSION_AUTO_INCREMENT = \
    insert into app_topic_version ( \
      topic_id, edit_comment, version_content, \
      wiki_user_id, edit_type, wiki_user_display, edit_date, \
      previous_topic_version_id, characters_changed, version_params \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_USER = \
    insert into app_users ( \
      username, password \
    ) values ( \
      ?, ? \
    )
STATEMENT_INSERT_USER_BLOCK = \
    insert into app_user_block ( \
      user_block_id, wiki_user_id, ip_address, \
      block_date, block_end_date, block_reason, \
      blocked_by_user_id, unblock_date, unblock_reason, \
      unblocked_by_user_id \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_USER_BLOCK_AUTO_INCREMENT = \
    insert into app_user_block ( \
      wiki_user_id, ip_address, \
      block_date, block_end_date, block_reason, \
      blocked_by_user_id, unblock_date, unblock_reason, \
      unblocked_by_user_id \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_VIRTUAL_WIKI = \
    insert into app_virtual_wiki ( \
      virtual_wiki_id, virtual_wiki_name, default_topic_name, \
      logo_image_url, meta_description, site_name \
    ) values ( \
      ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_VIRTUAL_WIKI_AUTO_INCREMENT = \
    insert into app_virtual_wiki ( \
      virtual_wiki_name, default_topic_name, \
      logo_image_url, meta_description, site_name \
    ) values ( \
      ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_WATCHLIST_ENTRY = \
    insert into app_watchlist ( \
      virtual_wiki_id, topic_name, wiki_user_id \
    ) values ( \
      ?, ?, ? \
    )
STATEMENT_INSERT_WIKI_FILE = \
    insert into app_file ( \
      file_id, virtual_wiki_id, file_name, \
      file_url, mime_type, topic_id, \
      delete_date, file_read_only, file_admin_only, \
      file_size \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_WIKI_FILE_AUTO_INCREMENT = \
    insert into app_file ( \
      virtual_wiki_id, file_name, \
      file_url, mime_type, topic_id, \
      delete_date, file_read_only, file_admin_only, \
      file_size \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_WIKI_FILE_VERSION = \
    insert into app_file_version ( \
      file_version_id, file_id, upload_comment, \
      file_url, wiki_user_id, wiki_user_display, \
      upload_date, mime_type, file_size \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_WIKI_FILE_VERSION_AUTO_INCREMENT = \
    insert into app_file_version ( \
      file_id, upload_comment, \
      file_url, wiki_user_id, wiki_user_display, \
      upload_date, mime_type, file_size \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_WIKI_USER = \
    insert into app_wiki_user ( \
      wiki_user_id, login, display_name, create_date, \
      last_login_date, create_ip_address, last_login_ip_address, \
      email \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_WIKI_USER_AUTO_INCREMENT = \
    insert into app_wiki_user ( \
      login, display_name, create_date, \
      last_login_date, create_ip_address, last_login_ip_address, \
      email \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_INSERT_USER_PREFERENCE_DEFAULTS = \
    insert into app_user_preferences_defaults ( \
      pref_key, pref_value, pref_group_key, seq_nr \
    ) values ( \
      ?, ?, ?, ? \
    )
STATEMENT_INSERT_USER_PREFERENCE = \
    insert into app_user_preferences ( \
      wiki_user_id, pref_key, pref_value \
    ) values ( \
      ?, ?, ? \
    )
STATEMENT_INSERT_FILE_DATA = \
    INSERT INTO app_file_data ( \
      file_version_id, resized, image_width, image_height, file_data \
    ) VALUES ( \
      ?, ?, ?, ?, ? \
    )
STATEMENT_SELECT_AUTHORITIES_AUTHORITY = \
    ( \
      select app_group_authorities.group_id as group_id, \
      null as wiki_user_id, \
      app_group_authorities.authority as authority, \
      app_group.group_name as group_name, \
      null as username \
      from app_group_authorities, app_group \
      where app_group_authorities.group_id = app_group.group_id \
      and app_group.group_id in ( \
        select group_id from app_group_authorities where authority = ? \
      ) \
    ) union ( \
      select null as group_id, \
      app_wiki_user.wiki_user_id as wiki_user_id, \
      app_authorities.authority as authority, \
      null as group_name, \
      app_authorities.username as username \
      from app_authorities, app_users, app_wiki_user \
      where app_authorities.username = app_users.username \
      and app_wiki_user.login = app_users.username \
      and app_users.username in ( \
        select username from app_authorities where authority = ? \
      ) \
    ) \
    order by group_name, username
STATEMENT_SELECT_AUTHORITIES_AUTHORITY_ALL = \
    ( \
      select app_group_authorities.group_id as group_id, \
      null as wiki_user_id, \
      app_group_authorities.authority as authority, \
      app_group.group_name as group_name, \
      null as username \
      from app_group_authorities, app_group \
      where app_group_authorities.group_id = app_group.group_id \
      and app_group.group_id in ( \
        select group_id from app_group_authorities where authority = ? \
      ) \
    ) union ( \
      select null as group_id, \
      app_wiki_user.wiki_user_id as wiki_user_id, \
      app_authorities.authority as authority, \
      null as group_name, \
      app_authorities.username as username \
      from app_authorities, app_users, app_wiki_user \
      where app_authorities.username = app_users.username \
      and app_wiki_user.login = app_users.username \
      and app_users.username in ( \
        select username from app_authorities where authority = ? \
      ) \
    ) union ( \
      select null as group_id, \
      app_wiki_user.wiki_user_id as wiki_user_id, \
      app_authorities.authority as authority, \
      null as group_name, \
      app_authorities.username as username \
      from app_authorities, app_group_authorities, app_users, app_wiki_user, app_group_members \
      where app_group_authorities.authority = ? \
      and app_wiki_user.login = app_users.username \
      and app_group_members.group_id = app_group_authorities.group_id \
      and app_users.username = app_group_members.username \
      and app_authorities.username = app_users.username \
    ) union ( \
      select null as group_id, \
      app_wiki_user.wiki_user_id as wiki_user_id, \
      null as authority, \
      null as group_name,\
      app_group_members.username as username \
      from app_group_authorities, app_users, app_wiki_user, app_group_members \
      where app_group_authorities.authority = ? \
      and app_wiki_user.login = app_users.username \
      and app_group_members.group_id = app_group_authorities.group_id \
      and app_users.username = app_group_members.username \
    ) \
    order by group_name, username
STATEMENT_SELECT_AUTHORITIES_LOGIN = \
    select app_wiki_user.wiki_user_id, app_users.username, \
    app_authorities.authority \
    from app_wiki_user, app_users \
    left outer join app_authorities on ( \
      app_users.username = app_authorities.username \
    ) \
    where app_users.username = app_wiki_user.login \
    and lower(app_users.username) like ? \
    order by app_users.username 
STATEMENT_SELECT_AUTHORITIES_USER = \
    select role_name, role_description \
    from app_role \
    where role_name in ( \
      select authority from app_authorities \
      where username = ? \
      union \
      select app_group_authorities.authority \
      from app_group_authorities, app_group_members \
      where app_group_authorities.group_id = app_group_members.group_id \
      and app_group_members.username = ? \
    )
STATEMENT_SELECT_CATEGORIES = \
    select distinct app_category.category_name, app_category.sort_key \
    from app_topic, app_category \
    where app_topic.topic_id = app_category.child_topic_id \
    and app_topic.virtual_wiki_id = ? \
    order by app_category.sort_key \
    limit ? offset ?
    
STATEMENT_SELECT_BOOKS = \
    select * from Book \
    order by Book.title \
    limit ? offset ?
    
STATEMENT_SELECT_CATEGORY_TOPICS = \
    select app_topic.topic_name, coalesce(app_category.sort_key, app_topic.topic_name) as sort_key, \
    app_topic.topic_type, app_category.category_name \
    from app_topic, app_category \
    where app_topic.topic_id = app_category.child_topic_id \
    and app_topic.virtual_wiki_id = ? \
    and lower(app_category.category_name) = ? \
    and delete_date is null \
    order by sort_key  
STATEMENT_SELECT_CONFIGURATION = \
    select * from app_configuration
STATEMENT_SELECT_GROUPS = \
    select group_id, group_name, group_description \
    from app_group \
    where group_id > 2 \
    order by group_name
STATEMENT_SELECT_GROUP = \
    select group_id, group_name, group_description \
    from app_group \
    where group_name = ?
STATEMENT_SELECT_GROUP_BY_ID = \
    select group_id, group_name, group_description \
    from app_group \
    where group_id = ?
STATEMENT_SELECT_GROUP_AUTHORITIES = \
    select role_name, role_description \
    from app_role \
    where role_name in ( \
      select authority \
      from app_group_authorities, app_group \
      where app_group_authorities.group_id = app_group.group_id \
      and app_group.group_name = ? \
    )
STATEMENT_SELECT_GROUP_MAP_AUTHORITIES = \
      select app_group_authorities.authority \
      from app_group_authorities, app_group_members \
      where app_group_authorities.group_id = app_group_members.group_id \
      and app_group_members.username = ?
STATEMENT_SELECT_GROUPS_AUTHORITIES = \
    select app_group.group_id, app_group.group_name, \
    app_group_authorities.authority \
    from app_group \
    left outer join app_group_authorities on ( \
      app_group.group_id = app_group_authorities.group_id \
    ) \
    order by app_group.group_name 
STATEMENT_SELECT_GROUP_MAP_GROUP = \
    select username \
    from app_group_members \
    where group_id = ? \
    order by username
STATEMENT_SELECT_GROUP_MAP_USER = \
    select group_id \
    from app_group_members \
    where username = ? \
    order by group_id
STATEMENT_SELECT_GROUP_SEQUENCE = \
    select max(group_id) as group_id from app_group
STATEMENT_SELECT_GROUP_MEMBERS_SEQUENCE = \
    select max(id) as id from app_group_members
STATEMENT_SELECT_INTERWIKIS = \
    select * from app_interwiki
STATEMENT_SELECT_LOG_ITEMS = \
    select * from app_log \
    where virtual_wiki_id = ? \
    order by log_date desc \
    limit ? offset ?
STATEMENT_SELECT_LOG_ITEMS_BY_TYPE = \
    select * from app_log \
    where log_type = ? \
    and virtual_wiki_id = ? \
    order by log_date desc \
    limit ? offset ?
STATEMENT_SELECT_NAMESPACE_SEQUENCE = \
    select max(namespace_id) as namespace_id from app_namespace
STATEMENT_SELECT_NAMESPACES = \
    select app_namespace.namespace_id, app_namespace.namespace, \
    main_namespace_id, virtual_wiki_name, \
    app_namespace_translation.namespace as namespace_translation \
    from app_namespace \
    left outer join ( \
      select namespace_id, namespace, virtual_wiki_name \
      from app_namespace_translation, app_virtual_wiki \
      where app_namespace_translation.virtual_wiki_id = app_virtual_wiki.virtual_wiki_id \
    ) app_namespace_translation on ( \
      app_namespace.namespace_id = app_namespace_translation.namespace_id \
    ) 
STATEMENT_SELECT_PW_RESET_CHALLENGE_DATA = \
    select challenge_value, challenge_date, challenge_ip, challenge_tries \
    from app_users \
    where username = ?
    
STATEMENT_SELECT_RECENT_CHANGES = \
    select * from app_recent_change \
    where virtual_wiki_name = ? \
    order by change_date desc \
    limit ? offset ?
    
STATEMENT_SELECT_ROLES = \
    select * from app_role \
    order by role_name 
    
STATEMENT_SELECT_BOOKS = \
    select * from Book \
    order by Book.title \
    limit ? offset ?
    
STATEMENT_SELECT_BOOK_BY_ID = \
    select * from Book \
    where Book.id = ?
    
STATEMENT_SELECT_TOPIC_BY_ID = \
    select app_topic.*, app_topic_version.version_content, \
    app_virtual_wiki.virtual_wiki_name \
    from app_topic, app_topic_version, app_virtual_wiki \
    where app_topic.current_version_id = app_topic_version.topic_version_id \
    and app_topic.virtual_wiki_id = app_virtual_wiki.virtual_wiki_id \
    and app_topic.topic_id = ?
STATEMENT_SELECT_TOPIC_BY_TYPE = \
    select topic_name, topic_id from app_topic \
    where app_topic.virtual_wiki_id = ? \
    and app_topic.topic_type in (?, ?) \
    and app_topic.namespace_id >= ? \
    and app_topic.namespace_id <= ? \
    and app_topic.delete_date is null \
    order by app_topic.topic_name \
    limit ? offset ?
STATEMENT_SELECT_TOPIC_COUNT = \
    select count(topic_id) as topic_count from app_topic \
    where virtual_wiki_id = ? \
    and namespace_id >= ? \
    and namespace_id <= ? \
    and topic_type != ? \
    and delete_date is null 
STATEMENT_SELECT_TOPIC = \
    select app_topic.*, app_topic_version.version_content, \
    app_virtual_wiki.virtual_wiki_name \
    from app_topic, app_topic_version, app_virtual_wiki \
    where app_topic.current_version_id = app_topic_version.topic_version_id \
    and app_topic.virtual_wiki_id = app_virtual_wiki.virtual_wiki_id \
    and app_topic.page_name = ? \
    and app_topic.virtual_wiki_id = ? \
    and app_topic.namespace_id = ? \
    order by app_topic.delete_date 
STATEMENT_SELECT_TOPIC_HISTORY = \
    SELECT \
      app_topic_version.topic_version_id, app_topic.topic_id, \
      app_topic.topic_name, app_topic_version.edit_date as change_date, \
      app_topic_version.wiki_user_id, \
      coalesce(app_wiki_user.login, app_topic_version.wiki_user_display) as display_name, \
      app_topic_version.edit_type, app_virtual_wiki.virtual_wiki_id, \
      app_virtual_wiki.virtual_wiki_name, app_topic_version.edit_comment as change_comment, \
      app_topic_version.previous_topic_version_id, \
      app_topic_version.characters_changed, null as log_type, \
      null as log_sub_type, \
      app_topic_version.version_params as log_params \
    FROM app_topic, app_virtual_wiki, app_topic_version \
    LEFT OUTER JOIN app_wiki_user ON ( \
      app_wiki_user.wiki_user_id = app_topic_version.wiki_user_id \
    ) \
    WHERE app_topic.topic_id = ? \
    AND app_topic.topic_id = app_topic_version.topic_id \
    AND app_topic.virtual_wiki_id = app_virtual_wiki.virtual_wiki_id \
    AND app_topic.delete_date is {0} null \
    order by change_date desc \
    limit ? offset ?
STATEMENT_SELECT_TOPIC_NAME = \
    select topic_name from app_topic \
    where page_name = ? \
    and virtual_wiki_id = ? \
    and namespace_id = ? \
    and delete_date is null
STATEMENT_SELECT_TOPIC_NAME_LOWER = \
    select topic_name from app_topic \
    where page_name_lower = ? \
    and virtual_wiki_id = ? \
    and namespace_id = ? \
    and delete_date is null
STATEMENT_SELECT_TOPIC_LINKS = \
    ( \
      select app_topic.topic_name, null as child_topic_name \
      from app_topic, app_topic_links \
      where app_topic.topic_id = app_topic_links.topic_id \
      and app_topic.virtual_wiki_id = ? \
      and app_topic_links.link_topic_namespace_id = ? \
      and app_topic_links.link_topic_page_name = ? \
      and app_topic.redirect_to is null \
    ) union ( \
      select parent.topic_name, child.topic_name as child_topic_name \
      from app_topic parent, app_topic child, app_topic_links \
      where child.topic_id = app_topic_links.topic_id \
      and child.virtual_wiki_id = parent.virtual_wiki_id \
      and parent.virtual_wiki_id = ? \
      and parent.redirect_to = ? \
      and app_topic_links.link_topic_namespace_id = parent.namespace_id \
      and app_topic_links.link_topic_page_name = parent.page_name \
    ) \
    order by topic_name, child_topic_name
STATEMENT_SELECT_TOPIC_LINK_ORPHANS = \
    select app_topic.topic_name \
    from app_topic \
    left outer join app_topic_links on ( \
      app_topic.namespace_id = app_topic_links.link_topic_namespace_id \
      and app_topic.page_name = app_topic_links.link_topic_page_name \
    ) \
    left outer join app_category on ( \
      app_topic.topic_id = app_category.child_topic_id \
    ) \
    where app_topic.virtual_wiki_id = ? \
    and app_topic.namespace_id = ? \
    and app_topic.topic_type != ? \
    and app_topic.delete_date is null \
    and app_topic_links.link_topic_page_name is null \
    and app_category.child_topic_id is null
STATEMENT_SELECT_TOPIC_LOWER = \
    select app_topic.*, app_topic_version.version_content, \
    app_virtual_wiki.virtual_wiki_name \
    from app_topic, app_topic_version, app_virtual_wiki \
    where app_topic.current_version_id = app_topic_version.topic_version_id \
    and app_topic.virtual_wiki_id = app_virtual_wiki.virtual_wiki_id \
    and app_topic.page_name_lower = ? \
    and app_topic.virtual_wiki_id = ? \
    and app_topic.namespace_id = ? \
    order by app_topic.delete_date 
STATEMENT_SELECT_TOPIC_NAMES = \
    select topic_name, topic_id, delete_date from app_topic \
    where virtual_wiki_id = ?
STATEMENT_SELECT_TOPIC_SEQUENCE = \
    select max(topic_id) as topic_id from app_topic
STATEMENT_SELECT_TOPIC_VERSION = \
    select * from app_topic_version \
    where topic_version_id = ?
STATEMENT_SELECT_TOPIC_VERSION_NEXT_ID = \
    select topic_version_id from app_topic_version \
    where previous_topic_version_id = ?
STATEMENT_SELECT_TOPIC_VERSION_SEQUENCE = \
    select max(topic_version_id) as topic_version_id from app_topic_version
STATEMENT_SELECT_TOPICS_ADMIN = \
    select topic_name from app_topic \
    where virtual_wiki_id = ? \
    and topic_admin_only = 1 \
    and delete_date is null \
    order by topic_name \
    limit ? offset ?
STATEMENT_SELECT_USER_BLOCKS = \
    select * from app_user_block \
    where (block_end_date > ? or block_end_date is null) \
    and unblock_date is null \
    order by block_date desc
STATEMENT_SELECT_USER_BLOCK_SEQUENCE = \
    select max(user_block_id) as user_block_id from app_user_block
STATEMENT_SELECT_USERS_AUTHENTICATION = \
    select username from app_users \
    where username = ? \
    and password = ?
STATEMENT_SELECT_VIRTUAL_WIKI_SEQUENCE = \
    select max(virtual_wiki_id) as virtual_wiki_id from app_virtual_wiki
STATEMENT_SELECT_VIRTUAL_WIKIS = \
    select * from app_virtual_wiki \
    order by virtual_wiki_name
STATEMENT_SELECT_WATCHLIST = \
    select topic_name from app_watchlist \
    where virtual_wiki_id = ? \
    and wiki_user_id = ? 
STATEMENT_SELECT_WATCHLIST_CHANGES = \
    select \
      app_topic_version.topic_version_id, app_topic_version.topic_id, \
      app_topic_version.previous_topic_version_id, app_topic.topic_name, \
      app_topic_version.edit_date as change_date, app_topic_version.edit_comment as change_comment, \
      app_topic_version.wiki_user_id, app_topic_version.edit_type, \
      app_wiki_user.login as display_name, app_topic.virtual_wiki_id, \
      app_virtual_wiki.virtual_wiki_name, \
      app_topic_version.characters_changed, \
      null as log_type, null as log_sub_type, \
      app_topic_version.version_params as log_params \
    from app_topic, app_virtual_wiki, app_topic_version, \
    app_wiki_user, app_watchlist \
    where app_virtual_wiki.virtual_wiki_id = app_topic.virtual_wiki_id \
    and app_wiki_user.wiki_user_id = app_topic_version.wiki_user_id \
    and app_topic.current_version_id = app_topic_version.topic_version_id \
    and app_topic.topic_name = app_watchlist.topic_name \
    and app_virtual_wiki.virtual_wiki_id = ? \
    and app_watchlist.wiki_user_id = ? \
    and (app_topic.delete_date is null or app_topic_version.edit_type = 5) \
    order by edit_date desc \
    limit ? offset ?
STATEMENT_SELECT_WIKI_FILE = \
    select * from app_file \
    where virtual_wiki_id = ? \
    and topic_id = ?
STATEMENT_SELECT_WIKI_FILE_COUNT = \
    select count(file_id) as file_count from app_file \
    where virtual_wiki_id = ? \
    and delete_date is null 
STATEMENT_SELECT_WIKI_FILE_SEQUENCE = \
    select max(file_id) as file_id from app_file
STATEMENT_SELECT_WIKI_FILE_VERSION_SEQUENCE = \
    select max(file_version_id) as file_version_id from app_file_version
STATEMENT_SELECT_WIKI_FILE_VERSIONS = \
    select * from app_file_version \
    where file_id = ? \
    order by file_version_id desc
STATEMENT_SELECT_WIKI_USER = \
    select * from app_wiki_user \
    where wiki_user_id = ?
STATEMENT_SELECT_WIKI_USER_CHANGES_ANONYMOUS = \
    select \
      app_topic_version.topic_version_id, app_topic_version.topic_id, \
      app_topic_version.previous_topic_version_id, app_topic.topic_name, \
      app_topic_version.edit_date as change_date, app_topic_version.edit_comment as change_comment, \
      app_topic_version.wiki_user_id, app_topic_version.edit_type, \
      app_topic_version.wiki_user_display as display_name, \
      app_topic.virtual_wiki_id, app_virtual_wiki.virtual_wiki_name, \
      app_topic_version.characters_changed, \
      null as log_type, null as log_sub_type, \
      app_topic_version.version_params as log_params \
    from app_topic, app_virtual_wiki, app_topic_version \
    where app_virtual_wiki.virtual_wiki_id = app_topic.virtual_wiki_id \
    and app_topic.topic_id = app_topic_version.topic_id \
    and app_virtual_wiki.virtual_wiki_name = ? \
    and app_topic_version.wiki_user_display = ? \
    and app_topic_version.wiki_user_id is null \
    and (app_topic.delete_date is null or app_topic_version.edit_type = 5) \
    order by edit_date desc \
    limit ? offset ?
STATEMENT_SELECT_WIKI_USER_CHANGES_LOGIN = \
    select \
      app_topic_version.topic_version_id, app_topic_version.topic_id, \
      app_topic_version.previous_topic_version_id, app_topic.topic_name, \
      app_topic_version.edit_date as change_date, app_topic_version.edit_comment as change_comment, \
      app_topic_version.wiki_user_id, app_topic_version.edit_type, \
      app_wiki_user.login as display_name, app_topic.virtual_wiki_id, \
      app_virtual_wiki.virtual_wiki_name, \
      app_topic_version.characters_changed, \
      null as log_type, null as log_sub_type, \
      app_topic_version.version_params as log_params \
    from app_topic, app_virtual_wiki, app_topic_version, app_wiki_user \
    where app_virtual_wiki.virtual_wiki_id = app_topic.virtual_wiki_id \
    and app_wiki_user.wiki_user_id = app_topic_version.wiki_user_id \
    and app_topic.topic_id = app_topic_version.topic_id \
    and app_virtual_wiki.virtual_wiki_name = ? \
    and app_wiki_user.login = ? \
    and (app_topic.delete_date is null or app_topic_version.edit_type = 5) \
    order by edit_date desc \
    limit ? offset ?
STATEMENT_SELECT_WIKI_USER_COUNT = \
    select count(wiki_user_id) as user_count from app_wiki_user 
STATEMENT_SELECT_WIKI_USER_DETAILS_PASSWORD = \
    select password from app_users \
    where username = ?
STATEMENT_SELECT_WIKI_USER_LOGIN = \
    select wiki_user_id from app_wiki_user \
    where login = ?
STATEMENT_SELECT_WIKI_USER_SEQUENCE = \
    select max(wiki_user_id) as wiki_user_id from app_wiki_user
STATEMENT_SELECT_WIKI_USERS = \
    select login from app_wiki_user \
    order by login \
    limit ? offset ?
STATEMENT_SELECT_USER_PREFERENCES_DEFAULTS = \
    select pref_key, pref_value, pref_group_key, seq_nr \
    from app_user_preferences_defaults \
    order by pref_group_key, seq_nr, pref_key
STATEMENT_SELECT_USER_PREFERENCES_DEFAULTS_BY_GROUP = \
    select pref_key, pref_value, pref_group_key, seq_nr \
    from app_user_preferences_defaults \
    order by seq_nr, pref_key \
    where pref_group_key = ?
STATEMENT_SELECT_USER_PREFERENCES = \
    select pref_key, pref_value \
    from app_user_preferences \
    where wiki_user_id = ? \
    order by pref_key
STATEMENT_SELECT_FILE_INFO = \
    SELECT v.mime_type, d.image_width, d.image_height \
    FROM app_file_data d, app_file_version v \    WHERE d.file_version_id = (select max(file_version_id) from app_file_version where file_id = ?) and \
    d.resized = ? and v.file_version_id = d.file_version_id
STATEMENT_SELECT_FILE_DATA = \
    SELECT v.file_version_id, v.mime_type, d.image_width, d.image_height, d.file_data \
    FROM app_file_data d, app_file_version v \    WHERE d.file_version_id = (select max(file_version_id) from app_file_version where file_id = ?) and \
    d.resized = ? and v.file_version_id = d.file_version_id
STATEMENT_SELECT_FILE_VERSION_DATA = \
    SELECT v.file_version_id, v.mime_type, d.image_width, d.image_height, d.file_data \
    FROM app_file_data d, app_file_version v \    WHERE d.file_version_id = ? and \
    d.resized = ? and v.file_version_id = d.file_version_id
    
STATEMENT_UPDATE_BOOK = \
    update Book \
    set Title = ?, \
    Author = ?, \
    Category = ?, \
    where id = ?
    
STATEMENT_UPDATE_GROUP = \
    update app_group \
    set group_name = ?, \
    group_description = ? \
    where group_id = ?
STATEMENT_UPDATE_NAMESPACE = \
    update app_namespace \
    set namespace = ?, \
    main_namespace_id = ? \
    where namespace_id = ?
STATEMENT_UPDATE_PW_RESET_CHALLENGE_DATA = \
    update app_users \
    set challenge_value = ?, \
    challenge_date = ?, \
    challenge_ip = ?, \
    challenge_tries = ? \
    where username = ?
STATEMENT_UPDATE_RECENT_CHANGES_PREVIOUS_VERSION_ID = \
    update app_recent_change set \
    previous_topic_version_id = ? \
    where previous_topic_version_id = ?
STATEMENT_UPDATE_ROLE = \
    update app_role \
    set role_description = ? \
    where role_name = ?
STATEMENT_UPDATE_TOPIC = \
    update app_topic set \
    virtual_wiki_id = ?, \
    topic_name = ?, \
    topic_type = ?, \
    topic_read_only = ?, \
    current_version_id = ?, \
    delete_date = ?, \
    topic_admin_only = ?, \
    redirect_to = ?, \
    namespace_id = ?, \
    page_name = ?, \
    page_name_lower = ? \
    where topic_id = ?
STATEMENT_UPDATE_TOPIC_NAMESPACE = \
    update app_topic set \
    namespace_id = ?, \
    page_name = ?, \
    page_name_lower = ? \
    where topic_id = ?
STATEMENT_UPDATE_TOPIC_VERSION = \
    update app_topic_version set \
    topic_id = ?, \
    edit_comment = ?, \
    version_content = ?, \
    wiki_user_id = ?, \
    edit_type = ?, \
    wiki_user_display = ?, \
    edit_date = ?, \
    previous_topic_version_id = ?, \
    characters_changed = ?, \
    version_params = ? \
    where topic_version_id = ?
STATEMENT_UPDATE_TOPIC_VERSION_PREVIOUS_VERSION_ID = \
    update app_topic_version set \
    previous_topic_version_id = ? \
    where topic_version_id = ?
STATEMENT_UPDATE_USER = \
    update app_users set \
    password = ?, \
    enabled = ? \
    where username = ?
STATEMENT_UPDATE_USER_BLOCK = \
    update app_user_block set \
    wiki_user_id = ?, \
    ip_address = ?, \
    block_date = ?, \
    block_end_date = ?, \
    block_reason = ?, \
    blocked_by_user_id = ?, \
    unblock_date = ?, \
    unblock_reason = ?, \
    unblocked_by_user_id = ? \
    where user_block_id = ?
STATEMENT_UPDATE_VIRTUAL_WIKI = \
    update app_virtual_wiki set \
    default_topic_name = ?, \
    logo_image_url = ?, \
    meta_description = ?, \
    site_name = ? \
    where virtual_wiki_id = ?
STATEMENT_UPDATE_WIKI_FILE = \
    update app_file set \
    virtual_wiki_id = ?, \
    file_name = ?, \
    file_url = ?, \
    mime_type = ?, \
    topic_id = ?, \
    delete_date = ?, \
    file_read_only = ?, \
    file_admin_only = ?, \
    file_size = ? \
    where file_id = ?
STATEMENT_UPDATE_WIKI_USER = \
    update app_wiki_user set \
    login = ?, \
    display_name = ?, \
    last_login_date = ?, \
    last_login_ip_address = ?, \
    email = ? \
    where wiki_user_id = ?
STATEMENT_UPDATE_USER_PREFERENCE_DEFAULTS = \
    UPDATE app_user_preferences_defaults SET \
    pref_value = ?, \
    pref_group_key = ?, \
    seq_nr = ? \
    WHERE pref_key = ?
UPGRADE_130_MIGRATE_USER_PREFERENCES_DEFAULT_LOCALE = \
    INSERT INTO app_user_preferences (wiki_user_id, pref_key, pref_value) \
    SELECT wiki_user_id, 'user.default.locale', default_locale \
    FROM app_wiki_user \
    WHERE default_locale IS NOT NULL
UPGRADE_130_MIGRATE_USER_PREFERENCES_EDITOR = \
    INSERT INTO app_user_preferences (wiki_user_id, pref_key, pref_value) \
    SELECT wiki_user_id, 'user.preferred.editor', editor \
    FROM app_wiki_user \
    WHERE editor IS NOT NULL
UPGRADE_130_MIGRATE_USER_PREFERENCES_SIGNATURE = \
    INSERT INTO app_user_preferences (wiki_user_id, pref_key, pref_value) \
    SELECT wiki_user_id, 'user.signature', signature \
    FROM app_wiki_user \
    WHERE signature IS NOT NULL
UPGRADE_130_REMOVE_WIKI_USER_TABLE_COLUMN_DEFAULT_LOCALE = \
    ALTER TABLE app_wiki_user DROP COLUMN default_locale
UPGRADE_130_REMOVE_WIKI_USER_TABLE_COLUMN_EDITOR = \
    ALTER TABLE app_wiki_user DROP COLUMN editor
UPGRADE_130_REMOVE_WIKI_USER_TABLE_COLUMN_SIGNATURE = \
    ALTER TABLE app_wiki_user DROP COLUMN signature
UPGRADE_130_ADD_USER_TABLE_COLUMN_CHALLENGE_VALUE = \
    ALTER TABLE app_users ADD COLUMN challenge_value varchar(100)
UPGRADE_130_ADD_USER_TABLE_COLUMN_CHALLENGE_DATE = \
    ALTER TABLE app_users ADD COLUMN challenge_date timestamp
UPGRADE_130_ADD_USER_TABLE_COLUMN_CHALLENGE_IP = \
    ALTER TABLE app_users ADD COLUMN challenge_ip varchar(39)
UPGRADE_130_ADD_USER_TABLE_COLUMN_CHALLENGE_TRIES = \
    ALTER TABLE app_users ADD COLUMN  challenge_tries integer default 0 not null
 